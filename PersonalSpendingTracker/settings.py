"""
Django settings for PersonalSpendingTracker project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from django.contrib.messages import constants as message_constants
from dotenv import load_dotenv, find_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mlmbekqz9+)p0o!*24akj0(ufh&v$w_d(9cj6j0&58=!v++5_e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'fafb-62-254-68-117.eu.ngrok.io']
# CSRF_TRUSTED_ORIGINS = ['https://fafb-62-254-68-117.eu.ngrok.io']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'minted',
    'widget_tweaks',
    'webpush',
    'django_crontab',
    'django_cleanup.apps.CleanupConfig',
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

load_dotenv(find_dotenv())

EMAIL_HOST = os.environ['EMAIL_HOST']
EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
EMAIL_PORT = os.environ['EMAIL_PORT']
EMAIL_USE_TLS = os.environ['EMAIL_USE_TLS']

WEBPUSH_SETTINGS = {
   "VAPID_PUBLIC_KEY": os.environ['VAPID_PUBLIC_KEY'],
   "VAPID_PRIVATE_KEY": os.environ['VAPID_PRIVATE_KEY'],
   "VAPID_ADMIN_EMAIL": os.environ['VAPID_ADMIN_EMAIL']
}

CRONJOBS = [
    ('0 9 * * *', 'minted.cron.send_daily_notifications'), # Everyday at 9:00
    ('0 9 * * 0', 'minted.cron.send_weekly_notifications'), # Every Sunday at 9:00 
    ('0 9 1 * *', 'minted.cron.send_monthly_notifications'), # First day of every month at 9:00 
    ('0 0 * * *', 'minted.cron.give_budget_rewards'), #Everyday at midnight 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
]

ROOT_URLCONF = 'PersonalSpendingTracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'PersonalSpendingTracker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#login url for redirecting user when not logged in
LOGIN_URL = 'log_in'

# Path for file uploads
UPLOAD_DIR = 'uploads/'
REWARDS_DIR = 'rewards/'
UPLOAD_ROOT = os.path.join(BASE_DIR, UPLOAD_DIR)
REWARDS_ROOT = os.path.join(BASE_DIR, REWARDS_DIR)

# URL for redirects
REDIRECT_URL_WHEN_LOGGED_IN_AS_USER = 'dashboard'
REDIRECT_URL_WHEN_LOGGED_IN_AS_ADMIN = 'dashboard'

# Message level tags should use Bootstrap terms
MESSAGE_TAGS={
    message_constants.DEBUG : 'dark',
    message_constants.ERROR : 'danger',
}

# User model for authentication and login purposes
AUTH_USER_MODEL = 'minted.User'

# Session settings configuration
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'minted_session'
